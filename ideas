Add On ideas

pattern builder
    - build in pattern builder
    - select sequence of patterns and number of steps per pattern
    arrange pattern in a sequence by dragging from stepper or pattern select

playable drum pads

realtime clip recording (mic input)

waveform mode

################################################################
To Do

Integrate Pattern Manager
- retrieve [bank][global][channel] index from pattern manager
- update pattern manager update step pattern update
-- ?? will pattern manager control visible patters in stepper

Pattern Select
- save global patterns (shelf)
- load global pattern
- banks?

Stepper
- clear pattern
- random pattern
- list of common pattern (maybe a dropdown list) -> specific to individual channels
- playback control
    - immediate change on pattern select
    - wait for stepper sequence to complete before play back of next pattern
    - play new pattern from the very beginning

Drum Machine Channel
    -button to preview original sound (done)
    -button to preview sound after vol, panning, pitch etc

###############################################################

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Drum machine patterns
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Bank = [A, B, C, D]
- each bank[i] is composed of 1 to 9 global patterns. A global pattern are patterns from all channels

global_patterns = [0, 1, 2, 3, 4, 5, 6, 7, 8]
- A global pattern are individual patterns from all channels
- when a global pattern is selected individual patterns are loaded on each channel
example global_patterns[0]:
    channel_1 = [1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0]
    channel_2 = [0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0]
    channel_3 = [1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0]
    channel_4 = [1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0]
    channel_5 = [1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0]
    channel_6 = [1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0]
    channel_7 = [1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0]
    channel_8 = [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0]

Channel_pattern = len(number of steps) -> 0 to 15
- a pattern for an individual channel

selecting a global pattern: bank[0-3] -> global_pattern[0-8]


initialisation:
channel_pattern = [0, 0, 0.....]
channel_patterns_list = []
global_patterns_list = []
bank_dict = {}

for i in 16 : number of steps
    channel_pattern[i] = 0

for i in 0 - 7 : len(no of channels)
    channel_patterns_list[i] = channel_pattern

for i in 0 - 8: len(number of g_patterns)
    global_pattern[i] = channel_patterns_list

for i in 0 - 3: number of banks
    bank_dict[i] = global_pattern


